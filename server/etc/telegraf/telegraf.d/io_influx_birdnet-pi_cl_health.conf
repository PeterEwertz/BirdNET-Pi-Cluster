### Read metrics about cpu usage
##[[inputs.cpu]]
##  ## Whether to report per-cpu stats or not
##  percpu = true
##  ## Whether to report total system cpu stats or not
##  totalcpu = true
##  ## If true, collect raw CPU time metrics
##  collect_cpu_time = false
##  ## If true, compute and report the sum of all non-idle CPU states
##  report_active = false
##  ## If true and the info is available then add core_id and physical_id tags
##  core_tags = false

# evtl zur normalisierung auf 1s aber ein anderer Aggregator
## [[aggregators.minmax]]
##   namepass = ["birds"]
##   ## General Aggregator Arguments:
##   ## The period on which to flush & clear the aggregator.
##   period = "1s"
##   ## If true, the original metric will be dropped by the
##   ## aggregator and will not get sent to the output plugins.
##   drop_original = false


# Read metrics from MQTT topic(s)
#obsolet birds v1.0
[[inputs.mqtt_consumer]]
  servers = ["tcp://birdnet-pi-cluster.net:1883"]
  topics = [
    "birdnet_pi_cluster/birds/json_v2/#"
  ]
  data_format = "json_v2"
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "birdnet_pi_cluster/health/json_v2"
  [[inputs.mqtt_consumer.json_v2]]
    [[inputs.mqtt_consumer.json_v2.object]]
      path = "@this"
      tags = ["host","Samples_read","value1", "confidence", "unit"]
      [inputs.mqtt_consumer.json_v2.object.fields]
        confidence = "float"
        value1 = "string"

# birds v2.0
[[inputs.mqtt_consumer]]
  servers = ["tcp://birdnet-pi-cluster.net:1883"]
  topics = [
    "birdnet_pi_cluster/birds/#"
  ]
  data_format = "json_v2"
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "birdnet_pi_cluster/birds/+/+/+/+"
    measurement = "_/measurement/_/_/_/_"
    tags = "_/_/country/state/city/_"
  [[inputs.mqtt_consumer.json_v2]]
    [[inputs.mqtt_consumer.json_v2.object]]
      path = "@this"
      tags = ["host","comname","sciname"]
      timestamp_key = "dt"
      timestamp_format = "2006-01-02 15:04:05"

      [inputs.mqtt_consumer.json_v2.object.fields]
        confidence = "float"
        lat = "float"
        lng = "float"
        dt = "string"
        week = "int"
        sens = "float"
        cutoff = "float"
        overlap = "float"



# health + host_staion
[[inputs.mqtt_consumer]]
  servers = ["tcp://birdnet-pi-cluster.net:1883"]
  topics = [
    "birdnet_pi_cluster/health/influx/#",
    "birdnet_pi_cluster/host_station/#"
  ]
  data_format = "influx"




# # Configuration for sending metrics to InfluxDB
[[outputs.influxdb_v2]]
#   ## The URLs of the InfluxDB cluster nodes.
#   ##
#   ## Multiple URLs can be specified for a single cluster, only ONE of the
#   ## urls will be written to each interval.
#   ##   ex: urls = ["https://us-west-2-1.aws.cloud2.influxdata.com"]
##urls = ["http://127.0.0.1:8086"]
##urls = ["http://nuc:8086"]
urls = ["http://localhost:8086"]
##urls = ["http://192.168.178.57:8086"]
#
#   ## Token for authentication.
token = "$INFLUX_TOKEN"
#
#   ## Organization is the name of the organization you wish to write to; must exist.
organization = "birds-org"
#
#   ## Destination bucket to write into.
bucket = "birds-bucket"
#
#   ## The value of this tag will be used to determine the bucket.  If this
#   ## tag is not set the 'bucket' option is used as the default.
#   # bucket_tag = ""
#
#   ## If true, the bucket tag will not be added to the metric.
#   # exclude_bucket_tag = false
#
#   ## Timeout for HTTP messages.
#   # timeout = "5s"
#
#   ## Additional HTTP headers
#   # http_headers = {"X-Special-Header" = "Special-Value"}
#
#   ## HTTP Proxy override, if unset values the standard proxy environment
#   ## variables are consulted to determine which proxy, if any, should be used.
#   # http_proxy = "http://corporate.proxy:3128"
#
#   ## HTTP User-Agent
#   # user_agent = "telegraf"
#
#   ## Content-Encoding for write request body, can be set to "gzip" to
#   ## compress body or "identity" to apply no encoding.
#   # content_encoding = "gzip"
#
#   ## Enable or disable uint support for writing uints influxdb 2.0.
#   # influx_uint_support = false
#
#   ## Optional TLS Config for use on HTTP connections.
#   # tls_ca = "/etc/telegraf/ca.pem"
#   # tls_cert = "/etc/telegraf/cert.pem"
#   # tls_key = "/etc/telegraf/key.pem"
#   ## Use TLS but skip chain & host verification
#   # insecure_skip_verify = false


