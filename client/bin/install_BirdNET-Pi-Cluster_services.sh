#!/usr/bin/env bash
# This installs the services that have been selected
set -x # Uncomment to enable debugging
trap 'rm -f ${tmpfile}' EXIT
trap 'exit 1' SIGINT SIGHUP
tmpfile=$(mktemp)

config_file=$my_dir/birdnet_pi_cluster.conf
export USER=$USER
export HOME=$HOME

install_depends() {
  apt install -y mosquitto-clients inotify-tools
}

install_scripts() {
  for i in "getMacAdress.sh sox-n2mqtt.sh"; do
     ln -sf ${my_dir}/bin/* /usr/local/bin/
  done
}

install_telegraf() {
  wget -q https://repos.influxdata.com/influxdata-archive_compat.key
  echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c influxdata-archive_compat.key' | \
	  sha256sum -c && cat influxdata-archive_compat.key | gpg --dearmor | \
	  sudo tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null
  echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | \
	  sudo tee /etc/apt/sources.list.d/influxdata.list

  apt install -y telegraf
  
  [ -d /etc/telegraf/telegraf.d ] || mkdir /etc/telegraf/telegraf.d
  if [ -f /etc/telegraf/telegraf.conf ];then
    cp /etc/telegraf/telegraf.conf /etc/telegraf/telegraf.conf.original
  fi

  cat << EOF > /etc/telegraf/telegraf.conf
################################################################################
#           Configuration telegraf settings for BirdNET-Pi-Cluster             #
# generated by "$0"                  #
# at `date`                                              #
################################################################################

[global_tags]
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = "$MAC_ADRESS"
  omit_hostname = false
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false
[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]
[[inputs.diskio]]
[[inputs.kernel]]
[[inputs.mem]]
[[inputs.processes]]
[[inputs.swap]]
# [[inputs.system]] adressed in output_birdnet_pi_cluster_mqtt.conf
EOF



  cat << EOF > /etc/telegraf/telegraf.d/output_birdnet_pi_cluster_mqtt.conf
################################################################################
# Configuration output_birdnet_pi_cluster_mqtt.conf for BirdNET-Pi-Cluster     #
# generated by "$0"                  #
# at `date`                                              #
################################################################################

[[inputs.system]]
[[outputs.mqtt]]
servers = ["$MQTT_BROKER:1883"]
topic_prefix = "birdnet_pi_cluster/health/influx"
EOF


  systemctl restart telegraf.service
}

install_sox-n_service() {
  echo "Installing sox-n.service"
  cat << EOF > $HOME/BirdNET-Pi-Cluster/client/templates/sox-n.service
[Unit]
Description=sends statistical information about the audio
[Service]
Restart=always
Type=simple
RestartSec=3
User=${USER}
ExecStart=/usr/local/bin/sox-n2mqtt.sh
[Install]
WantedBy=multi-user.target
EOF
  ln -sf $HOME/birdnet_pi_cluster/client/templates/sox-n.service /usr/lib/systemd/system

  systemctl enable sox-n.service
  systemctl restart sox-n.service
}



install_services() {

  install_depends
  install_telegraf
  install_scripts
  install_sox-n_service
}

if [ -f ${config_file} ];then
  source ${config_file}
  install_services
else
  echo "Unable to find a configuration file. Please make sure that $config_file exists."
fi
